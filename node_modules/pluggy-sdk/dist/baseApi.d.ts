declare type QueryParameters = {
    [key: string]: number | number[] | string | string[];
};
export declare type ClientParams = {
    clientId: string;
    clientSecret: string;
    baseUrl?: string;
    showUrls?: boolean;
};
export declare class BaseApi {
    private apiKey;
    private clientId;
    private clientSecret;
    private baseUrl?;
    private showUrls;
    constructor(params: ClientParams);
    private getApiKey;
    protected createGetRequest<T>(endpoint: string, params?: QueryParameters): Promise<T>;
    protected createPostRequest<T>(endpoint: string, params?: QueryParameters, body?: any): Promise<T>;
    protected createPutRequest<T>(endpoint: string, params?: QueryParameters, body?: any): Promise<T>;
    protected createPatchRequest<T>(endpoint: string, params?: QueryParameters, body?: any): Promise<T>;
    protected createDeleteRequest<T>(endpoint: string, params?: QueryParameters, body?: any): Promise<T>;
    protected createMutationRequest<T>(method: string, endpoint: string, params?: QueryParameters, body?: any): Promise<T>;
    protected mapToQueryString(params: QueryParameters): string;
}
export {};
